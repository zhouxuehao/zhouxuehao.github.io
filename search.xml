<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>原型原型链</title>
    <url>/2020/04/08/javaScript/prototype/</url>
    <content><![CDATA[<p><img src="../images/prototype.png" alt="s"></p>
<a id="more"></a>
<p>111</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>浏览器-本地存储</title>
    <url>/2020/04/09/browser/localStorage/</url>
    <content><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1586456743592&di=57080dbf6fde90b18a4f4facc4572913&imgtype=0&src=http%3A%2F%2Fimg3.imgtn.bdimg.com%2Fit%2Fu%3D825583228%2C4117796698%26fm%3D214%26gp%3D0.jpg" alt=""></p>
<a id="more"></a>
<h1 id="在浏览器中存储主要分为以下三种方式"><a href="#在浏览器中存储主要分为以下三种方式" class="headerlink" title="在浏览器中存储主要分为以下三种方式"></a>在浏览器中存储主要分为以下三种方式</h1><h2 id="1、localstorage-2、sessionStorage-3、cookie-4、localStorage与sessionStorage区别"><a href="#1、localstorage-2、sessionStorage-3、cookie-4、localStorage与sessionStorage区别" class="headerlink" title="1、localstorage  2、sessionStorage  3、cookie 4、localStorage与sessionStorage区别"></a>1、localstorage  2、sessionStorage  3、cookie 4、localStorage与sessionStorage区别</h2><h3 id="1、localStorage"><a href="#1、localStorage" class="headerlink" title="1、localStorage"></a>1、localStorage</h3><p>生命周期永久，除非用户清除浏览器中的localStorage信息，否则永远存在；</p>
<p>存放数据大小一般为5MB；</p>
<p>仅在浏览器中保存，不参与服务器通信；</p>
<p>API调用：</p>
<pre><code>localStorage.setItem(&quot;key&quot;,&quot;value&quot;);//以“key”为名称存储一个值“value”

localStorage.getItem(&quot;key&quot;);//获取名称为“key”的值

localStorage.removeItem(&quot;key&quot;);//删除名称为“key”的信息。

localStorage.clear();​//清空localStorage中所有信息</code></pre><h3 id="2、sessionStorage"><a href="#2、sessionStorage" class="headerlink" title="2、sessionStorage"></a>2、sessionStorage</h3><p>仅在当前会话下有效，关闭页面或者浏览器后被清除；</p>
<p>存放数据大小一般为5MB；</p>
<p>仅在浏览器中保存，不参与服务器通信；</p>
<p>可以接受源生接口，亦可以再次封装来对Object和Array有更好的支持；</p>
<p>API调用：</p>
<pre><code>sessionStorage.setItem(&quot;key&quot;,&quot;value&quot;);//以“key”为名称存储一个值“value”

sessionStorage.getItem(&quot;key&quot;);//获取名称为“key”的值

sessionStorage.removeItem(&quot;key&quot;);//删除名称为“key”的信息。

sessionStorage.clear();​//清空sessionStorage中所有信息</code></pre><h3 id="3、Cookie"><a href="#3、Cookie" class="headerlink" title="3、Cookie"></a>3、Cookie</h3><p>生命周期为在cookie设置的过期时间之前一直有效，即使窗口或者浏览器关闭；</p>
<p>存放数据大小为4K；</p>
<p>有存储个数限制（各浏览器不同），一般不超过20个；</p>
<p>与服务器端通信，每次都会携带在HTTP头中，cookie存储数据过多会带来性能问题；</p>
<h3 id="4、localStorage与sessionStorage区别"><a href="#4、localStorage与sessionStorage区别" class="headerlink" title="4、localStorage与sessionStorage区别"></a>4、localStorage与sessionStorage区别</h3><p>我经常用到的存储方式为前两种，因此需要清楚了解它们之间的区别。</p>
<p>localStorage与sessionStorage的API调用方法相同；</p>
<p>不同浏览器无法共享localStorage或sessionStorage中的信息；</p>
<p>相同浏览器的不同页面可以共享相同的localStorage（前提是页面属于相同域名和端口）；</p>
<p>相同浏览器的不同页面无法共享sessionStorage的信息；</p>
<h1 id="我的应用场景"><a href="#我的应用场景" class="headerlink" title="我的应用场景"></a>我的应用场景</h1><p>1、用vue做的后台管理平台，允许打开多个页面，不同页面可登陆不同的用户，用户之间互不干扰。</p>
<p>结合上述信息与要求，如果使用localStorage，因为相同域名和端口，会导致不同页面数据共享，从而引发混乱。如果采用sessionStorage，不同页面即可保证互不干扰，且vue为SPA，无需打开新的页面，因此不会相互干扰。实测可行。</p>
]]></content>
      <categories>
        <category>浏览器</category>
      </categories>
  </entry>
  <entry>
    <title>浏览器-兼容</title>
    <url>/2020/04/09/browser/compatible/</url>
    <content><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1586459136951&di=0e73a1a850b2b670f1b348e626dc1063&imgtype=0&src=http%3A%2F%2Fpic4.zhimg.com%2Fv2-449ef3989ff7e7ec30ec9b01702cb7e6_1200x500.jpg" alt=""></p>
<a id="more"></a>
<h1 id="常见的浏览器兼容"><a href="#常见的浏览器兼容" class="headerlink" title="常见的浏览器兼容"></a>常见的浏览器兼容</h1><h3 id="常见的浏览器内核可以分四种：Trident、Gecko、Blink、Webkit"><a href="#常见的浏览器内核可以分四种：Trident、Gecko、Blink、Webkit" class="headerlink" title="常见的浏览器内核可以分四种：Trident、Gecko、Blink、Webkit"></a>常见的浏览器内核可以分四种：Trident、Gecko、Blink、Webkit</h3><h3 id="IE浏览器：Trident内核，也称为IE内核"><a href="#IE浏览器：Trident内核，也称为IE内核" class="headerlink" title="IE浏览器：Trident内核，也称为IE内核"></a>IE浏览器：Trident内核，也称为IE内核</h3><h3 id="Chrome浏览器：Webkit内核，现在是Blink内核"><a href="#Chrome浏览器：Webkit内核，现在是Blink内核" class="headerlink" title="Chrome浏览器：Webkit内核，现在是Blink内核"></a>Chrome浏览器：Webkit内核，现在是Blink内核</h3><h3 id="Firefox浏览器：Gecko内核，俗称Firefox内核"><a href="#Firefox浏览器：Gecko内核，俗称Firefox内核" class="headerlink" title="Firefox浏览器：Gecko内核，俗称Firefox内核"></a>Firefox浏览器：Gecko内核，俗称Firefox内核</h3><h3 id="Safari浏览器：Webkit内核"><a href="#Safari浏览器：Webkit内核" class="headerlink" title="Safari浏览器：Webkit内核"></a>Safari浏览器：Webkit内核</h3><h3 id="Opera浏览器：最初是自己的Presto内核，后来加入谷歌大军，从Webkit又到了Blink内核；"><a href="#Opera浏览器：最初是自己的Presto内核，后来加入谷歌大军，从Webkit又到了Blink内核；" class="headerlink" title="Opera浏览器：最初是自己的Presto内核，后来加入谷歌大军，从Webkit又到了Blink内核；"></a>Opera浏览器：最初是自己的Presto内核，后来加入谷歌大军，从Webkit又到了Blink内核；</h3><h3 id="360浏览器：IE-Chrome双内核"><a href="#360浏览器：IE-Chrome双内核" class="headerlink" title="360浏览器：IE+Chrome双内核"></a>360浏览器：IE+Chrome双内核</h3><h3 id="猎豹浏览器：IE-Chrome双内核"><a href="#猎豹浏览器：IE-Chrome双内核" class="headerlink" title="猎豹浏览器：IE+Chrome双内核"></a>猎豹浏览器：IE+Chrome双内核</h3><h3 id="百度浏览器：IE内核"><a href="#百度浏览器：IE内核" class="headerlink" title="百度浏览器：IE内核"></a>百度浏览器：IE内核</h3><h3 id="QQ浏览器：Trident（兼容模式）-Webkit（高速模式）"><a href="#QQ浏览器：Trident（兼容模式）-Webkit（高速模式）" class="headerlink" title="QQ浏览器：Trident（兼容模式）+Webkit（高速模式）"></a>QQ浏览器：Trident（兼容模式）+Webkit（高速模式）</h3><h2 id="常见的兼容性问题："><a href="#常见的兼容性问题：" class="headerlink" title="常见的兼容性问题："></a>常见的兼容性问题：</h2><h3 id="1-不同浏览器的标签默认的外补丁（margin）和内补丁（padding）不同"><a href="#1-不同浏览器的标签默认的外补丁（margin）和内补丁（padding）不同" class="headerlink" title="1.不同浏览器的标签默认的外补丁（margin）和内补丁（padding）不同"></a>1.不同浏览器的标签默认的外补丁（margin）和内补丁（padding）不同</h3><h4 id="解决方案：css里增加通配符-margin：0；padding：0"><a href="#解决方案：css里增加通配符-margin：0；padding：0" class="headerlink" title="解决方案：css里增加通配符*{margin：0；padding：0}"></a>解决方案：css里增加通配符*{margin：0；padding：0}</h4><h3 id="2-IE6双边距问题；在IE6中设置了float，同时又设置margin，就会出现边距问题"><a href="#2-IE6双边距问题；在IE6中设置了float，同时又设置margin，就会出现边距问题" class="headerlink" title="2.IE6双边距问题；在IE6中设置了float，同时又设置margin，就会出现边距问题"></a>2.IE6双边距问题；在IE6中设置了float，同时又设置margin，就会出现边距问题</h3><h4 id="解决方案：设置display：inline；"><a href="#解决方案：设置display：inline；" class="headerlink" title="解决方案：设置display：inline；"></a>解决方案：设置display：inline；</h4><h3 id="3-当标签的高度设置小于10px，在IE6、IE7中会超出自己设置的高度"><a href="#3-当标签的高度设置小于10px，在IE6、IE7中会超出自己设置的高度" class="headerlink" title="3.当标签的高度设置小于10px，在IE6、IE7中会超出自己设置的高度"></a>3.当标签的高度设置小于10px，在IE6、IE7中会超出自己设置的高度</h3><h4 id="解决方案：设置display：inline；-1"><a href="#解决方案：设置display：inline；-1" class="headerlink" title="解决方案：设置display：inline；"></a>解决方案：设置display：inline；</h4><h3 id="4-图片默认有间距"><a href="#4-图片默认有间距" class="headerlink" title="4.图片默认有间距"></a>4.图片默认有间距</h3><h4 id="解决方案：使用float为img布局"><a href="#解决方案：使用float为img布局" class="headerlink" title="解决方案：使用float为img布局"></a>解决方案：使用float为img布局</h4><h3 id="5-IE9以下浏览器不能使用opacity"><a href="#5-IE9以下浏览器不能使用opacity" class="headerlink" title="5.IE9以下浏览器不能使用opacity"></a>5.IE9以下浏览器不能使用opacity</h3><h4 id="解决方案：opacity：0-5；filter：alfha（opacity-50）；filter：progid：DXlmageTransform-Microsoft-Alfha-style-0-opacity-50"><a href="#解决方案：opacity：0-5；filter：alfha（opacity-50）；filter：progid：DXlmageTransform-Microsoft-Alfha-style-0-opacity-50" class="headerlink" title="解决方案：opacity：0.5；filter：alfha（opacity=50）；filter：progid：DXlmageTransform.Microsoft.Alfha(style=0,opacity=50);"></a>解决方案：opacity：0.5；filter：alfha（opacity=50）；filter：progid：DXlmageTransform.Microsoft.Alfha(style=0,opacity=50);</h4><h3 id="6-边距重叠问题；"><a href="#6-边距重叠问题；" class="headerlink" title="6.边距重叠问题；"></a>6.边距重叠问题；</h3><h4 id="解决方案：当相邻两个元素都设置了margin边距时，margin将取最大值，舍弃最小值；"><a href="#解决方案：当相邻两个元素都设置了margin边距时，margin将取最大值，舍弃最小值；" class="headerlink" title="解决方案：当相邻两个元素都设置了margin边距时，margin将取最大值，舍弃最小值；"></a>解决方案：当相邻两个元素都设置了margin边距时，margin将取最大值，舍弃最小值；</h4><h3 id="7-cursor：hand显示手型在safari上不支持"><a href="#7-cursor：hand显示手型在safari上不支持" class="headerlink" title="7.cursor：hand显示手型在safari上不支持"></a>7.cursor：hand显示手型在safari上不支持</h3><h4 id="解决方案：统一使用cursor：pointer；"><a href="#解决方案：统一使用cursor：pointer；" class="headerlink" title="解决方案：统一使用cursor：pointer；"></a>解决方案：统一使用cursor：pointer；</h4><h3 id="8-两个块级元素，父元素设置了overflow：auto；子元素设置了position：relative；且高度大于父元素，在IE6、IE7会被隐藏而不是溢出；"><a href="#8-两个块级元素，父元素设置了overflow：auto；子元素设置了position：relative；且高度大于父元素，在IE6、IE7会被隐藏而不是溢出；" class="headerlink" title="8.两个块级元素，父元素设置了overflow：auto；子元素设置了position：relative；且高度大于父元素，在IE6、IE7会被隐藏而不是溢出；"></a>8.两个块级元素，父元素设置了overflow：auto；子元素设置了position：relative；且高度大于父元素，在IE6、IE7会被隐藏而不是溢出；</h3><h4 id="解决方案：父级元素设置position：relative"><a href="#解决方案：父级元素设置position：relative" class="headerlink" title="解决方案：父级元素设置position：relative"></a>解决方案：父级元素设置position：relative</h4><h3 id="9-const问题"><a href="#9-const问题" class="headerlink" title="9.const问题"></a>9.const问题</h3><h4 id="说明：Firefox下，可以使用const关键字来定义常量；IE下，只能使用var关键字来定义常量。"><a href="#说明：Firefox下，可以使用const关键字来定义常量；IE下，只能使用var关键字来定义常量。" class="headerlink" title="说明：Firefox下，可以使用const关键字来定义常量；IE下，只能使用var关键字来定义常量。"></a>说明：Firefox下，可以使用const关键字来定义常量；IE下，只能使用var关键字来定义常量。</h4><h4 id="解决方法：统一使用var关键字来定义常量。"><a href="#解决方法：统一使用var关键字来定义常量。" class="headerlink" title="解决方法：统一使用var关键字来定义常量。"></a>解决方法：统一使用var关键字来定义常量。</h4><h3 id="10-event-srcElement问题"><a href="#10-event-srcElement问题" class="headerlink" title="10.event.srcElement问题"></a>10.event.srcElement问题</h3><h4 id="问题说明：IE下，event对象有srcElement属性，但是没有target属性；Firefox下，event对象有target属性，但是没有srcElement属性。"><a href="#问题说明：IE下，event对象有srcElement属性，但是没有target属性；Firefox下，event对象有target属性，但是没有srcElement属性。" class="headerlink" title="问题说明：IE下，event对象有srcElement属性，但是没有target属性；Firefox下，event对象有target属性，但是没有srcElement属性。"></a>问题说明：IE下，event对象有srcElement属性，但是没有target属性；Firefox下，event对象有target属性，但是没有srcElement属性。</h4><h4 id="解决方法：使用srcObj-event-srcElement-event-srcElement-event-target"><a href="#解决方法：使用srcObj-event-srcElement-event-srcElement-event-target" class="headerlink" title="解决方法：使用srcObj = event.srcElement?event.srcElement:event.target;"></a>解决方法：使用srcObj = event.srcElement?event.srcElement:event.target;</h4><h3 id="11-事件绑定"><a href="#11-事件绑定" class="headerlink" title="11.事件绑定"></a>11.事件绑定</h3><h4 id="IE-dom-attachEvent"><a href="#IE-dom-attachEvent" class="headerlink" title="IE:dom.attachEvent();"></a>IE:dom.attachEvent();</h4><h4 id="其他浏览器：dom-addEventListener"><a href="#其他浏览器：dom-addEventListener" class="headerlink" title="其他浏览器：dom.addEventListener();"></a>其他浏览器：dom.addEventListener();</h4><h4 id="标准浏览器采用事件捕获的方式对应IE的事件冒泡机制（即标准由最外元素至最内元素或者IE由最内元素到最外元素）最后标准方亦觉得IE这方面的比较合理，所以便将事件冒泡纳入了标准，这也是addEventListener第三个参数的由来，而且事件冒泡作为了默认值。"><a href="#标准浏览器采用事件捕获的方式对应IE的事件冒泡机制（即标准由最外元素至最内元素或者IE由最内元素到最外元素）最后标准方亦觉得IE这方面的比较合理，所以便将事件冒泡纳入了标准，这也是addEventListener第三个参数的由来，而且事件冒泡作为了默认值。" class="headerlink" title="标准浏览器采用事件捕获的方式对应IE的事件冒泡机制（即标准由最外元素至最内元素或者IE由最内元素到最外元素）最后标准方亦觉得IE这方面的比较合理，所以便将事件冒泡纳入了标准，这也是addEventListener第三个参数的由来，而且事件冒泡作为了默认值。"></a>标准浏览器采用事件捕获的方式对应IE的事件冒泡机制（即标准由最外元素至最内元素或者IE由最内元素到最外元素）最后标准方亦觉得IE这方面的比较合理，所以便将事件冒泡纳入了标准，这也是addEventListener第三个参数的由来，而且事件冒泡作为了默认值。</h4><h3 id="12-操作tr的html"><a href="#12-操作tr的html" class="headerlink" title="12.操作tr的html"></a>12.操作tr的html</h3><h4 id="在ie9以下，不能操作tr的innerHTML"><a href="#在ie9以下，不能操作tr的innerHTML" class="headerlink" title="在ie9以下，不能操作tr的innerHTML"></a>在ie9以下，不能操作tr的innerHTML</h4><h3 id="13-ajax略有不同"><a href="#13-ajax略有不同" class="headerlink" title="13.ajax略有不同"></a>13.ajax略有不同</h3><h4 id="IE：ActiveXObject"><a href="#IE：ActiveXObject" class="headerlink" title="IE：ActiveXObject"></a>IE：ActiveXObject</h4><h4 id="其他：xmlHttpReuest"><a href="#其他：xmlHttpReuest" class="headerlink" title="其他：xmlHttpReuest"></a>其他：xmlHttpReuest</h4><h3 id="14-对象宽高赋值问题"><a href="#14-对象宽高赋值问题" class="headerlink" title="14.对象宽高赋值问题"></a>14.对象宽高赋值问题</h3><h4 id="问题说明：FireFox中类似obj-style-height-imgObj-height的语句无效。"><a href="#问题说明：FireFox中类似obj-style-height-imgObj-height的语句无效。" class="headerlink" title="问题说明：FireFox中类似obj.style.height = imgObj.height的语句无效。"></a>问题说明：FireFox中类似obj.style.height = imgObj.height的语句无效。</h4><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h3 id="1-cursor-hand-VS-cursor-pointerfirefox不支持hand，但ie支持pointer"><a href="#1-cursor-hand-VS-cursor-pointerfirefox不支持hand，但ie支持pointer" class="headerlink" title="1.cursor:hand VS cursor:pointerfirefox不支持hand，但ie支持pointer"></a>1.cursor:hand VS cursor:pointerfirefox不支持hand，但ie支持pointer</h3><h4 id="解决方法-统一使用pointer"><a href="#解决方法-统一使用pointer" class="headerlink" title="解决方法: 统一使用pointer"></a>解决方法: 统一使用pointer</h4><h3 id="2-innerText在IE中能正常工作，但在FireFox中却不行"><a href="#2-innerText在IE中能正常工作，但在FireFox中却不行" class="headerlink" title="2. innerText在IE中能正常工作，但在FireFox中却不行."></a>2. innerText在IE中能正常工作，但在FireFox中却不行.</h3><h4 id="需用textContent。"><a href="#需用textContent。" class="headerlink" title="需用textContent。"></a>需用textContent。</h4><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(navigator.appName.indexOf(&quot;Explorer&quot;) &gt; -1)&#123;</span><br><span class="line">   document.getElementById(&#39;element&#39;).innerText &#x3D; &quot;my text&quot;;</span><br><span class="line">   &#125; else&#123;</span><br><span class="line">   document.getElementById(&#39;element&#39;).textContent &#x3D; &quot;my text&quot;;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-CSS透明"><a href="#3-CSS透明" class="headerlink" title="3. CSS透明"></a>3. CSS透明</h3><h4 id="IE：filter-progid-DXImageTransform-Microsoft-Alpha-style-0-opacity-60-。"><a href="#IE：filter-progid-DXImageTransform-Microsoft-Alpha-style-0-opacity-60-。" class="headerlink" title="IE：filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)。"></a>IE：filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)。</h4><h4 id="FF：opacity-0-6。"><a href="#FF：opacity-0-6。" class="headerlink" title="FF：opacity:0.6。"></a>FF：opacity:0.6。</h4><h3 id="4-css中的width和padding"><a href="#4-css中的width和padding" class="headerlink" title="4. css中的width和padding"></a>4. css中的width和padding</h3><h4 id="在IE7和FF中width宽度不包括padding，在Ie6中包括padding"><a href="#在IE7和FF中width宽度不包括padding，在Ie6中包括padding" class="headerlink" title="在IE7和FF中width宽度不包括padding，在Ie6中包括padding."></a>在IE7和FF中width宽度不包括padding，在Ie6中包括padding.</h4><h3 id="5-FF和IEBOX模型解释不一致导致相差2px"><a href="#5-FF和IEBOX模型解释不一致导致相差2px" class="headerlink" title="5. FF和IEBOX模型解释不一致导致相差2px"></a>5. FF和IEBOX模型解释不一致导致相差2px</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">box.style&#123;width:100;border:1px;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="ie理解为box-width-100"><a href="#ie理解为box-width-100" class="headerlink" title="ie理解为box.width =100"></a>ie理解为box.width =100</h4><h4 id="ff理解为box-width-100-1-2-102-加上边框2px"><a href="#ff理解为box-width-100-1-2-102-加上边框2px" class="headerlink" title="ff理解为box.width =100 + 1*2 = 102 //加上边框2px"></a>ff理解为box.width =100 + 1*2 = 102 //加上边框2px</h4><h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div&#123;margin:30px!important;margin:28px;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="注意这两个margin的顺序一定不能写反，-IE不能识别-important这个属性，但别的浏览器可以识别。所以在IE下其实解释成这样："><a href="#注意这两个margin的顺序一定不能写反，-IE不能识别-important这个属性，但别的浏览器可以识别。所以在IE下其实解释成这样：" class="headerlink" title="注意这两个margin的顺序一定不能写反， IE不能识别!important这个属性，但别的浏览器可以识别。所以在IE下其实解释成这样："></a>注意这两个margin的顺序一定不能写反， IE不能识别!important这个属性，但别的浏览器可以识别。所以在IE下其实解释成这样：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div&#123;maring:30px;margin:28px&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-IE5-和IE6的BOX解释不一致"><a href="#6-IE5-和IE6的BOX解释不一致" class="headerlink" title="6. IE5 和IE6的BOX解释不一致"></a>6. IE5 和IE6的BOX解释不一致</h3><h3 id="IE5下"><a href="#IE5下" class="headerlink" title="IE5下:"></a>IE5下:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div&#123;width:300px;margin:0 10px 0 10px;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="div-的宽度会被解释为300px-10px-右填充-10px-左填充-，最终div的宽度为280px，而在IE6和其他浏览器上宽度则是以-300px-10px-右填充-10px-左填充-320px来计算的。这时我们可以做如下修改"><a href="#div-的宽度会被解释为300px-10px-右填充-10px-左填充-，最终div的宽度为280px，而在IE6和其他浏览器上宽度则是以-300px-10px-右填充-10px-左填充-320px来计算的。这时我们可以做如下修改" class="headerlink" title="div 的宽度会被解释为300px-10px(右填充)-10px(左填充)，最终div的宽度为280px，而在IE6和其他浏览器上宽度则是以 300px+10px(右填充)+10px(左填充)=320px来计算的。这时我们可以做如下修改:"></a>div 的宽度会被解释为300px-10px(右填充)-10px(左填充)，最终div的宽度为280px，而在IE6和其他浏览器上宽度则是以 300px+10px(右填充)+10px(左填充)=320px来计算的。这时我们可以做如下修改:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div&#123;width:300px!important;width &#x2F;**&#x2F;:340px;margin:0 10px 0 10px&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-ul和ol列表缩进问题"><a href="#7-ul和ol列表缩进问题" class="headerlink" title="7. ul和ol列表缩进问题"></a>7. ul和ol列表缩进问题</h3><h4 id="消除ul、ol等列表的缩进时，样式应写成："><a href="#消除ul、ol等列表的缩进时，样式应写成：" class="headerlink" title="消除ul、ol等列表的缩进时，样式应写成："></a>消除ul、ol等列表的缩进时，样式应写成：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list-style:none;margin:0px;padding:0px;</span><br></pre></td></tr></table></figure>
<h4 id="经验证，在IE中，设置margin-0px可以去除列表的上下左右缩进、空白以及列表编号或圆点，设置padding对样式没有影响；在-Firefox-中，设置margin-0px仅仅可以去除上下的空白，设置padding-0px后仅仅可以去掉左右缩进，还必须设置list-style-none才能去除列表编号或圆点。也就是说，在IE中仅仅设置margin-0px即可达到最终效果，而在Firefox中必须同时设置margin-0px、-padding-0px以及list-style-none三项才能达到最终效果。"><a href="#经验证，在IE中，设置margin-0px可以去除列表的上下左右缩进、空白以及列表编号或圆点，设置padding对样式没有影响；在-Firefox-中，设置margin-0px仅仅可以去除上下的空白，设置padding-0px后仅仅可以去掉左右缩进，还必须设置list-style-none才能去除列表编号或圆点。也就是说，在IE中仅仅设置margin-0px即可达到最终效果，而在Firefox中必须同时设置margin-0px、-padding-0px以及list-style-none三项才能达到最终效果。" class="headerlink" title="经验证，在IE中，设置margin:0px可以去除列表的上下左右缩进、空白以及列表编号或圆点，设置padding对样式没有影响；在 Firefox 中，设置margin:0px仅仅可以去除上下的空白，设置padding:0px后仅仅可以去掉左右缩进，还必须设置list- style:none才能去除列表编号或圆点。也就是说，在IE中仅仅设置margin:0px即可达到最终效果，而在Firefox中必须同时设置margin:0px、 padding:0px以及list-style:none三项才能达到最终效果。"></a>经验证，在IE中，设置margin:0px可以去除列表的上下左右缩进、空白以及列表编号或圆点，设置padding对样式没有影响；在 Firefox 中，设置margin:0px仅仅可以去除上下的空白，设置padding:0px后仅仅可以去掉左右缩进，还必须设置list- style:none才能去除列表编号或圆点。也就是说，在IE中仅仅设置margin:0px即可达到最终效果，而在Firefox中必须同时设置margin:0px、 padding:0px以及list-style:none三项才能达到最终效果。</h4><h3 id="8-元素水平居中问题"><a href="#8-元素水平居中问题" class="headerlink" title="8. 元素水平居中问题"></a>8. 元素水平居中问题</h3><h4 id="FF-margin-0-auto"><a href="#FF-margin-0-auto" class="headerlink" title="FF: margin:0 auto;"></a>FF: margin:0 auto;</h4><h4 id="IE-父级-text-align-center"><a href="#IE-父级-text-align-center" class="headerlink" title="IE: 父级{ text-align:center; }"></a>IE: 父级{ text-align:center; }</h4><h3 id="9-Div的垂直居中问题"><a href="#9-Div的垂直居中问题" class="headerlink" title="9. Div的垂直居中问题"></a>9. Div的垂直居中问题</h3><h4 id="vertical-align-middle-将行距增加到和整个DIV一样高：line-height-200px-然后插入文字，就垂直居中了。缺点是要控制内容不要换行。"><a href="#vertical-align-middle-将行距增加到和整个DIV一样高：line-height-200px-然后插入文字，就垂直居中了。缺点是要控制内容不要换行。" class="headerlink" title="vertical-align:middle; 将行距增加到和整个DIV一样高：line-height:200px;然后插入文字，就垂直居中了。缺点是要控制内容不要换行。"></a>vertical-align:middle; 将行距增加到和整个DIV一样高：line-height:200px;然后插入文字，就垂直居中了。缺点是要控制内容不要换行。</h4><h3 id="10-margin加倍的问题"><a href="#10-margin加倍的问题" class="headerlink" title="10. margin加倍的问题"></a>10. margin加倍的问题</h3><h4 id="设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。解决方案是在这个div里面加上display-inline"><a href="#设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。解决方案是在这个div里面加上display-inline" class="headerlink" title="设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。解决方案是在这个div里面加上display:inline;"></a>设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。解决方案是在这个div里面加上display:inline;</h4><h4 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id&#x3D;”imfloat”&gt;&lt;&#x2F;div&gt;</span><br><span class="line">相应的css为</span><br><span class="line"># imfloat&#123;</span><br><span class="line">float:left;</span><br><span class="line">margin:5px;&#x2F;&#x2F;IE下理解为10px</span><br><span class="line">display:inline;&#x2F;&#x2F;IE下再理解为5px</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="11-IE与宽度和高度的问题"><a href="#11-IE与宽度和高度的问题" class="headerlink" title="11. IE与宽度和高度的问题"></a>11. IE与宽度和高度的问题</h3><h4 id="IE不认得min-这个定义，但实际上它把正常的width和height当作有min的情况来使。这样问题就大了，如果只用宽度和高度，正常的浏览器里这两个值就不会变，如果只用min-width和min-height的话，IE下面根本等于没有设置宽度和高度。比如要设置背景图片，这个宽度是比较重要的。要解决这个问题，可以这样："><a href="#IE不认得min-这个定义，但实际上它把正常的width和height当作有min的情况来使。这样问题就大了，如果只用宽度和高度，正常的浏览器里这两个值就不会变，如果只用min-width和min-height的话，IE下面根本等于没有设置宽度和高度。比如要设置背景图片，这个宽度是比较重要的。要解决这个问题，可以这样：" class="headerlink" title="IE不认得min-这个定义，但实际上它把正常的width和height当作有min的情况来使。这样问题就大了，如果只用宽度和高度，正常的浏览器里这两个值就不会变，如果只用min-width和min-height的话，IE下面根本等于没有设置宽度和高度。比如要设置背景图片，这个宽度是比较重要的。要解决这个问题，可以这样："></a>IE不认得min-这个定义，但实际上它把正常的width和height当作有min的情况来使。这样问题就大了，如果只用宽度和高度，正常的浏览器里这两个值就不会变，如果只用min-width和min-height的话，IE下面根本等于没有设置宽度和高度。比如要设置背景图片，这个宽度是比较重要的。要解决这个问题，可以这样：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#box&#123; </span><br><span class="line">    width: 80px; height: 35px;</span><br><span class="line">&#125;</span><br><span class="line">html&gt;body #box&#123;</span><br><span class="line">    width: auto;</span><br><span class="line">    height: auto;</span><br><span class="line">    min-width: 80px; </span><br><span class="line">    min-height: 35px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="12-页面的最小宽度"><a href="#12-页面的最小宽度" class="headerlink" title="12. 页面的最小宽度"></a>12. 页面的最小宽度</h3><h4 id="如上一个问题，IE不识别min，要实现最小宽度，可用下面的方法："><a href="#如上一个问题，IE不识别min，要实现最小宽度，可用下面的方法：" class="headerlink" title="如上一个问题，IE不识别min，要实现最小宽度，可用下面的方法："></a>如上一个问题，IE不识别min，要实现最小宽度，可用下面的方法：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#container&#123; </span><br><span class="line">   min-width:600px;</span><br><span class="line">   width:expression(document.body.clientWidth&lt; 600? &quot;600px&quot;: &quot;auto&quot; );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="第一个min-width是正常的；但第2行的width使用了Javascript，这只有IE才认得，这也会让你的HTML文档不太正规。它实际上通过Javascript的判断来实现最小宽度。"><a href="#第一个min-width是正常的；但第2行的width使用了Javascript，这只有IE才认得，这也会让你的HTML文档不太正规。它实际上通过Javascript的判断来实现最小宽度。" class="headerlink" title="第一个min-width是正常的；但第2行的width使用了Javascript，这只有IE才认得，这也会让你的HTML文档不太正规。它实际上通过Javascript的判断来实现最小宽度。"></a>第一个min-width是正常的；但第2行的width使用了Javascript，这只有IE才认得，这也会让你的HTML文档不太正规。它实际上通过Javascript的判断来实现最小宽度。</h4><h3 id="13-DIV浮动IE文本产生3象素的bug"><a href="#13-DIV浮动IE文本产生3象素的bug" class="headerlink" title="13. DIV浮动IE文本产生3象素的bug"></a>13. DIV浮动IE文本产生3象素的bug</h3><h4 id="左边对象浮动，右边采用外补丁的左边距来定位，右边对象内的文本会离左边有3px的间距"><a href="#左边对象浮动，右边采用外补丁的左边距来定位，右边对象内的文本会离左边有3px的间距" class="headerlink" title="左边对象浮动，右边采用外补丁的左边距来定位，右边对象内的文本会离左边有3px的间距."></a>左边对象浮动，右边采用外补丁的左边距来定位，右边对象内的文本会离左边有3px的间距.</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#box&#123; float:left; width:800px;&#125;</span><br><span class="line">#left&#123; float:left; width:50%;&#125;</span><br><span class="line">#right&#123; width:50%;&#125;</span><br><span class="line">*html #left&#123; margin-right:-3px; &#x2F;&#x2F;这句是关键&#125; </span><br><span class="line">&lt;div id&#x3D;&quot;box&quot;&gt;</span><br><span class="line">     &lt;div id&#x3D;&quot;left&quot;&gt;＜&#x2F;div&gt;</span><br><span class="line">     &lt;div id&#x3D;&quot;right&quot;&gt;＜&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="14-IE捉迷藏的问题"><a href="#14-IE捉迷藏的问题" class="headerlink" title="14. IE捉迷藏的问题"></a>14. IE捉迷藏的问题</h3><h4 id="当div应用复杂的时候每个栏中又有一些链接，DIV等这个时候容易发生捉迷藏的问题。"><a href="#当div应用复杂的时候每个栏中又有一些链接，DIV等这个时候容易发生捉迷藏的问题。" class="headerlink" title="当div应用复杂的时候每个栏中又有一些链接，DIV等这个时候容易发生捉迷藏的问题。"></a>当div应用复杂的时候每个栏中又有一些链接，DIV等这个时候容易发生捉迷藏的问题。</h4><h4 id="有些内容显示不出来，当鼠标选择这个区域是发现内容确实在页面。"><a href="#有些内容显示不出来，当鼠标选择这个区域是发现内容确实在页面。" class="headerlink" title="有些内容显示不出来，当鼠标选择这个区域是发现内容确实在页面。"></a>有些内容显示不出来，当鼠标选择这个区域是发现内容确实在页面。</h4><h4 id="解决办法：对-layout使用line-height属性或者给-layout使用固定高和宽。页面结构尽量简单。"><a href="#解决办法：对-layout使用line-height属性或者给-layout使用固定高和宽。页面结构尽量简单。" class="headerlink" title="解决办法：对#layout使用line-height属性或者给#layout使用固定高和宽。页面结构尽量简单。"></a>解决办法：对#layout使用line-height属性或者给#layout使用固定高和宽。页面结构尽量简单。</h4><h3 id="15-float的div闭合-清除浮动-自适应高度"><a href="#15-float的div闭合-清除浮动-自适应高度" class="headerlink" title="15. float的div闭合;清除浮动;自适应高度"></a>15. float的div闭合;清除浮动;自适应高度</h3><h4 id="①-例如："><a href="#①-例如：" class="headerlink" title="① 例如："></a>① 例如：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">＜div id&#x3D;”floatA”&gt;＜div id&#x3D;”floatB”&gt;＜div id&#x3D;”NOTfloatC”&gt;</span><br></pre></td></tr></table></figure>
<h4 id="这里的NOTfloatC并不希望继续平移，而是希望往下排。-其中floatA、floatB的属性已经设置为float-left"><a href="#这里的NOTfloatC并不希望继续平移，而是希望往下排。-其中floatA、floatB的属性已经设置为float-left" class="headerlink" title="这里的NOTfloatC并不希望继续平移，而是希望往下排。(其中floatA、floatB的属性已经设置为float:left;)"></a>这里的NOTfloatC并不希望继续平移，而是希望往下排。(其中floatA、floatB的属性已经设置为float:left;)</h4><h4 id="这段代码在IE中毫无问题，问题出在FF。原因是NOTfloatC并非float标签，必须将float标签闭合。在＜divclass-”floatB”-gt-＜div-class-”NOTfloatC”-gt-之间加上＜div-class-”clear”-gt-这个div一定要注意位置，而且必须与两个具有float属性的div同级，之间不能存在嵌套关系，否则会产生异常。并且将clear这种样式定义为为如下即可："><a href="#这段代码在IE中毫无问题，问题出在FF。原因是NOTfloatC并非float标签，必须将float标签闭合。在＜divclass-”floatB”-gt-＜div-class-”NOTfloatC”-gt-之间加上＜div-class-”clear”-gt-这个div一定要注意位置，而且必须与两个具有float属性的div同级，之间不能存在嵌套关系，否则会产生异常。并且将clear这种样式定义为为如下即可：" class="headerlink" title="这段代码在IE中毫无问题，问题出在FF。原因是NOTfloatC并非float标签，必须将float标签闭合。在＜divclass=”floatB”&gt;＜div class=”NOTfloatC”&gt;之间加上＜div class=”clear”&gt;这个div一定要注意位置，而且必须与两个具有float属性的div同级，之间不能存在嵌套关系，否则会产生异常。并且将clear这种样式定义为为如下即可："></a>这段代码在IE中毫无问题，问题出在FF。原因是NOTfloatC并非float标签，必须将float标签闭合。在＜divclass=”floatB”&gt;＜div class=”NOTfloatC”&gt;之间加上＜div class=”clear”&gt;这个div一定要注意位置，而且必须与两个具有float属性的div同级，之间不能存在嵌套关系，否则会产生异常。并且将clear这种样式定义为为如下即可：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.clear&#123;clear:both;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="②作为外部-wrapper-的-div-不要定死高度-为了让高度能自适应，要在wrapper里面加上overflow-hidden-当包含float的box的时候，高度自适应在IE下无效，这时候应该触发IE的layout私有属性-万恶的IE啊！-用zoom-1-可以做到，这样就达到了兼容。"><a href="#②作为外部-wrapper-的-div-不要定死高度-为了让高度能自适应，要在wrapper里面加上overflow-hidden-当包含float的box的时候，高度自适应在IE下无效，这时候应该触发IE的layout私有属性-万恶的IE啊！-用zoom-1-可以做到，这样就达到了兼容。" class="headerlink" title="②作为外部 wrapper 的 div 不要定死高度,为了让高度能自适应，要在wrapper里面加上overflow:hidden; 当包含float的box的时候，高度自适应在IE下无效，这时候应该触发IE的layout私有属性(万恶的IE啊！)用zoom:1;可以做到，这样就达到了兼容。"></a>②作为外部 wrapper 的 div 不要定死高度,为了让高度能自适应，要在wrapper里面加上overflow:hidden; 当包含float的box的时候，高度自适应在IE下无效，这时候应该触发IE的layout私有属性(万恶的IE啊！)用zoom:1;可以做到，这样就达到了兼容。</h4><h4 id="例如某一个wrapper如下定义："><a href="#例如某一个wrapper如下定义：" class="headerlink" title="例如某一个wrapper如下定义："></a>例如某一个wrapper如下定义：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.colwrapper&#123;overflow:hidden; zoom:1; margin:5px auto;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="③对于排版-我们用得最多的css描述可能就是float-left-有的时候我们需要在n栏的float-div后面做一个统一的背景-譬如"><a href="#③对于排版-我们用得最多的css描述可能就是float-left-有的时候我们需要在n栏的float-div后面做一个统一的背景-譬如" class="headerlink" title="③对于排版,我们用得最多的css描述可能就是float:left.有的时候我们需要在n栏的float div后面做一个统一的背景,譬如:"></a>③对于排版,我们用得最多的css描述可能就是float:left.有的时候我们需要在n栏的float div后面做一个统一的背景,譬如:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id&#x3D;”page”&gt;</span><br><span class="line">   &lt;div id&#x3D;”left”&gt;＜&#x2F;div&gt;</span><br><span class="line">   &lt;div id&#x3D;”center”&gt;＜&#x2F;div&gt;</span><br><span class="line">   &lt;div id&#x3D;”right”&gt;＜&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<h4 id="比如我们要将page的背景设置成蓝色-以达到所有三栏的背景颜色是蓝色的目的-但是我们会发现随着left-centerright的向下拉长-而page居然保存高度不变-问题来了-原因在于page不是float属性-而我们的page由于要居中-不能设置成float-所以我们应该这样解决："><a href="#比如我们要将page的背景设置成蓝色-以达到所有三栏的背景颜色是蓝色的目的-但是我们会发现随着left-centerright的向下拉长-而page居然保存高度不变-问题来了-原因在于page不是float属性-而我们的page由于要居中-不能设置成float-所以我们应该这样解决：" class="headerlink" title="比如我们要将page的背景设置成蓝色,以达到所有三栏的背景颜色是蓝色的目的,但是我们会发现随着left centerright的向下拉长,而page居然保存高度不变,问题来了,原因在于page不是float属性,而我们的page由于要居中,不能设置成float,所以我们应该这样解决："></a>比如我们要将page的背景设置成蓝色,以达到所有三栏的背景颜色是蓝色的目的,但是我们会发现随着left centerright的向下拉长,而page居然保存高度不变,问题来了,原因在于page不是float属性,而我们的page由于要居中,不能设置成float,所以我们应该这样解决：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id&#x3D;”page”&gt;</span><br><span class="line">   &lt;div id&#x3D;”bg” style&#x3D;”float:left;width:100%”&gt;</span><br><span class="line">      &lt;div id&#x3D;”left”&gt;＜&#x2F;div&gt;</span><br><span class="line">      &lt;div id&#x3D;”center”&gt;＜&#x2F;div&gt;</span><br><span class="line">      &lt;div id&#x3D;”right”&gt;＜&#x2F;div&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<h4 id="再嵌入一个float-left而宽度是100-的DIV解决之。"><a href="#再嵌入一个float-left而宽度是100-的DIV解决之。" class="headerlink" title="再嵌入一个float left而宽度是100%的DIV解决之。"></a>再嵌入一个float left而宽度是100%的DIV解决之。</h4><h4 id="④万能float-闭合-非常重要"><a href="#④万能float-闭合-非常重要" class="headerlink" title="④万能float 闭合(非常重要!)"></a>④万能float 闭合(非常重要!)</h4><h4 id="关于-clear-float-的原理可参见-How-To-ClearFloats-Without-Structural-Markup-将以下代码加入Global-CSS-中-给需要闭合的div加上class-”clearfix”即可-屡试不爽。"><a href="#关于-clear-float-的原理可参见-How-To-ClearFloats-Without-Structural-Markup-将以下代码加入Global-CSS-中-给需要闭合的div加上class-”clearfix”即可-屡试不爽。" class="headerlink" title="关于 clear float 的原理可参见 [How To ClearFloats Without Structural Markup],将以下代码加入Global CSS 中,给需要闭合的div加上class=”clearfix”即可,屡试不爽。"></a>关于 clear float 的原理可参见 [How To ClearFloats Without Structural Markup],将以下代码加入Global CSS 中,给需要闭合的div加上class=”clearfix”即可,屡试不爽。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* Clear Fix &#x2F;</span><br><span class="line">.clearfix:after &#123; content:&quot;.&quot;; display:block; height:0; clear:both;visibility:hidden; &#125;</span><br><span class="line">.clearfix &#123; display:inline-block; &#125;</span><br><span class="line">&#x2F; Hide from IE Mac &#x2F;</span><br><span class="line">.clearfix &#123;display:block;&#125;</span><br><span class="line">&#x2F; End hide from IE Mac &#x2F;</span><br><span class="line">&#x2F; end of clearfix *&#x2F;</span><br></pre></td></tr></table></figure>
<h4 id="或者这样设置：-hackbox-display-table-将对象作为块元素级的表格显示"><a href="#或者这样设置：-hackbox-display-table-将对象作为块元素级的表格显示" class="headerlink" title="或者这样设置：.hackbox{display:table; //将对象作为块元素级的表格显示}"></a>或者这样设置：.hackbox{display:table; //将对象作为块元素级的表格显示}</h4><h3 id="16-高度不适应"><a href="#16-高度不适应" class="headerlink" title="16. 高度不适应"></a>16. 高度不适应</h3><h4 id="高度不适应是当内层对象的高度发生变化时外层高度不能自动进行调节，特别是当内层对象使用margin-或padding时。"><a href="#高度不适应是当内层对象的高度发生变化时外层高度不能自动进行调节，特别是当内层对象使用margin-或padding时。" class="headerlink" title="高度不适应是当内层对象的高度发生变化时外层高度不能自动进行调节，特别是当内层对象使用margin 或padding时。"></a>高度不适应是当内层对象的高度发生变化时外层高度不能自动进行调节，特别是当内层对象使用margin 或padding时。</h4><h4 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#box &#123;background-color:#eee; &#125;</span><br><span class="line">#box p &#123;margin-top: 20px;margin-bottom: 20px; text-align:center; &#125;</span><br><span class="line">&lt;div id&#x3D;&quot;box&quot;&gt;</span><br><span class="line">    &lt;p&gt;p对象中的内容＜&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<h4 id="解决技巧：在P对象上下各加2个空的div对象CSS代码-height-0px-overflow-hidden-或者为DIV加上border属性。"><a href="#解决技巧：在P对象上下各加2个空的div对象CSS代码-height-0px-overflow-hidden-或者为DIV加上border属性。" class="headerlink" title="解决技巧：在P对象上下各加2个空的div对象CSS代码{height:0px;overflow:hidden;}或者为DIV加上border属性。"></a>解决技巧：在P对象上下各加2个空的div对象CSS代码{height:0px;overflow:hidden;}或者为DIV加上border属性。</h4><h3 id="17-IE6下图片下有空隙产生"><a href="#17-IE6下图片下有空隙产生" class="headerlink" title="17. IE6下图片下有空隙产生"></a>17. IE6下图片下有空隙产生</h3><h4 id="解决这个BUG的技巧有很多-可以是改变html的排版-或者设置img为display-block或者设置vertical-align属性为vertical-align-top-bottom-middle-text-bottom都可以解决"><a href="#解决这个BUG的技巧有很多-可以是改变html的排版-或者设置img为display-block或者设置vertical-align属性为vertical-align-top-bottom-middle-text-bottom都可以解决" class="headerlink" title="解决这个BUG的技巧有很多,可以是改变html的排版,或者设置img为display:block或者设置vertical-align属性为vertical-align:top/bottom/middle/text-bottom都可以解决."></a>解决这个BUG的技巧有很多,可以是改变html的排版,或者设置img为display:block或者设置vertical-align属性为vertical-align:top/bottom/middle/text-bottom都可以解决.</h4><h3 id="18-对齐文本与文本输入框"><a href="#18-对齐文本与文本输入框" class="headerlink" title="18. 对齐文本与文本输入框"></a>18. 对齐文本与文本输入框</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加上vertical-align:middle;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    input &#123;</span><br><span class="line">        width:200px;</span><br><span class="line">        height:30px;</span><br><span class="line">        border:1px solid red;</span><br><span class="line">        vertical-align:middle;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<h4 id="经验证，在IE下任一版本都不适用，而ff、opera、safari、chrome均OK！"><a href="#经验证，在IE下任一版本都不适用，而ff、opera、safari、chrome均OK！" class="headerlink" title="经验证，在IE下任一版本都不适用，而ff、opera、safari、chrome均OK！"></a>经验证，在IE下任一版本都不适用，而ff、opera、safari、chrome均OK！</h4><h3 id="19-LI中内容超过长度后以省略号显示"><a href="#19-LI中内容超过长度后以省略号显示" class="headerlink" title="19. LI中内容超过长度后以省略号显示"></a>19. LI中内容超过长度后以省略号显示</h3><h4 id="此技巧适用与IE、Opera、safari、chrom浏览器，FF暂不支持。"><a href="#此技巧适用与IE、Opera、safari、chrom浏览器，FF暂不支持。" class="headerlink" title="此技巧适用与IE、Opera、safari、chrom浏览器，FF暂不支持。"></a>此技巧适用与IE、Opera、safari、chrom浏览器，FF暂不支持。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    li &#123;</span><br><span class="line">        width:200px;</span><br><span class="line">        white-space:nowrap;</span><br><span class="line">        text-overflow:ellipsis;</span><br><span class="line">        -o-text-overflow:ellipsis;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<h3 id="20-为什么web标准中IE无法设置滚动条颜色了"><a href="#20-为什么web标准中IE无法设置滚动条颜色了" class="headerlink" title="20. 为什么web标准中IE无法设置滚动条颜色了"></a>20. 为什么web标准中IE无法设置滚动条颜色了</h3><h4 id="解决办法是将body换成html"><a href="#解决办法是将body换成html" class="headerlink" title="解决办法是将body换成html"></a>解决办法是将body换成html</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPEhtml PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD XHTML 1.0 Strict&#x2F;&#x2F;EN&quot;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;xhtml1&#x2F;DTD&#x2F;xhtml1-strict.dtd&quot;&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;gb2312&quot; &#x2F;&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    html &#123;</span><br><span class="line">        scrollbar-face-color:#f6f6f6;</span><br><span class="line">        scrollbar-highlight-color:#fff;</span><br><span class="line">        scrollbar-shadow-color:#eeeeee;</span><br><span class="line">        scrollbar-3dlight-color:#eeeeee;</span><br><span class="line">        scrollbar-arrow-color:#000;</span><br><span class="line">        scrollbar-track-color:#fff;</span><br><span class="line">        scrollbar-darkshadow-color:#fff;</span><br><span class="line">    &#125;</span><br><span class="line">＜&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="21-为什么无法定义1px左右高度的容器"><a href="#21-为什么无法定义1px左右高度的容器" class="headerlink" title="21. 为什么无法定义1px左右高度的容器"></a>21. 为什么无法定义1px左右高度的容器</h3><h4 id="IE6下这个问题是因为默认的行高造成的-解决的技巧也有很多："><a href="#IE6下这个问题是因为默认的行高造成的-解决的技巧也有很多：" class="headerlink" title="IE6下这个问题是因为默认的行高造成的,解决的技巧也有很多："></a>IE6下这个问题是因为默认的行高造成的,解决的技巧也有很多：</h4><h4 id="例如"><a href="#例如" class="headerlink" title="例如:"></a>例如:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">overflow:hidden　 zoom:0.08 　line-height:1px</span><br></pre></td></tr></table></figure>

<h3 id="22-链接-a标签-的边框与背景"><a href="#22-链接-a标签-的边框与背景" class="headerlink" title="22. 链接(a标签)的边框与背景"></a>22. 链接(a标签)的边框与背景</h3><h4 id="a链接加边框和背景色，需设置-display-block-同时设置-float-left-保证不换行。参照menubar-给-a-和menubar设置高度是为了避免底边显示错位-若不设-height-可以在menubar中插入一个空格。"><a href="#a链接加边框和背景色，需设置-display-block-同时设置-float-left-保证不换行。参照menubar-给-a-和menubar设置高度是为了避免底边显示错位-若不设-height-可以在menubar中插入一个空格。" class="headerlink" title="a链接加边框和背景色，需设置 display: block, 同时设置 float: left 保证不换行。参照menubar, 给 a 和menubar设置高度是为了避免底边显示错位, 若不设 height, 可以在menubar中插入一个空格。"></a>a链接加边框和背景色，需设置 display: block, 同时设置 float: left 保证不换行。参照menubar, 给 a 和menubar设置高度是为了避免底边显示错位, 若不设 height, 可以在menubar中插入一个空格。</h4><h3 id="23-超链接访问过后hover样式就不出现的问题"><a href="#23-超链接访问过后hover样式就不出现的问题" class="headerlink" title="23. 超链接访问过后hover样式就不出现的问题"></a>23. 超链接访问过后hover样式就不出现的问题</h3><h4 id="被点击访问过的超链接样式不在具有hover和active了-很多人应该都遇到过这个问题-解决技巧是改变CSS属性的排列顺序-L-V-H-A"><a href="#被点击访问过的超链接样式不在具有hover和active了-很多人应该都遇到过这个问题-解决技巧是改变CSS属性的排列顺序-L-V-H-A" class="headerlink" title="被点击访问过的超链接样式不在具有hover和active了,很多人应该都遇到过这个问题,解决技巧是改变CSS属性的排列顺序: L-V-H-A"></a>被点击访问过的超链接样式不在具有hover和active了,很多人应该都遇到过这个问题,解决技巧是改变CSS属性的排列顺序: L-V-H-A</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    a:link &#123;&#125;</span><br><span class="line">    a:visited &#123;&#125;</span><br><span class="line">    a:hover &#123;&#125;</span><br><span class="line">    a:active &#123;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="24-FORM标签"><a href="#24-FORM标签" class="headerlink" title="24. FORM标签"></a>24. FORM标签</h3><p>####这个标签在IE中,将会自动margin一些边距,而在FF中margin则是0,因此,如果想显示一致,所以最好在css中指定margin和 padding,针对上面两个问题,我的css中一般首先都使用这样的样式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ul,form&#123;margin:0;padding:0;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="25-属性选择器-这个不能算是兼容-是隐藏css的一个bug"><a href="#25-属性选择器-这个不能算是兼容-是隐藏css的一个bug" class="headerlink" title="25. 属性选择器(这个不能算是兼容,是隐藏css的一个bug)"></a>25. 属性选择器(这个不能算是兼容,是隐藏css的一个bug)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p[id]&#123;&#125;div[id]&#123;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="这个对于IE6-0和IE6-0以下的版本都隐藏-FF和OPera作用-属性选择器和子选择器还是有区别的-子选择器的范围从形式来说缩小了-属性选择器的范围比较大-如p-id-中-所有p标签中有id的都是同样式的"><a href="#这个对于IE6-0和IE6-0以下的版本都隐藏-FF和OPera作用-属性选择器和子选择器还是有区别的-子选择器的范围从形式来说缩小了-属性选择器的范围比较大-如p-id-中-所有p标签中有id的都是同样式的" class="headerlink" title="这个对于IE6.0和IE6.0以下的版本都隐藏,FF和OPera作用.属性选择器和子选择器还是有区别的,子选择器的范围从形式来说缩小了,属性选择器的范围比较大,如p[id]中,所有p标签中有id的都是同样式的."></a>这个对于IE6.0和IE6.0以下的版本都隐藏,FF和OPera作用.属性选择器和子选择器还是有区别的,子选择器的范围从形式来说缩小了,属性选择器的范围比较大,如p[id]中,所有p标签中有id的都是同样式的.</h4><h3 id="26-为什么FF下文本无法撑开容器的高度"><a href="#26-为什么FF下文本无法撑开容器的高度" class="headerlink" title="26. 为什么FF下文本无法撑开容器的高度"></a>26. 为什么FF下文本无法撑开容器的高度</h3><h4 id="标准浏览器中固定高度值的容器是不会象IE6里那样被撑开的-那我又想固定高度-又想能被撑开需要怎样设置呢？办法就是去掉height设置min-height-200px-这里为了照顾不认识min-height的IE6-可以这样定义"><a href="#标准浏览器中固定高度值的容器是不会象IE6里那样被撑开的-那我又想固定高度-又想能被撑开需要怎样设置呢？办法就是去掉height设置min-height-200px-这里为了照顾不认识min-height的IE6-可以这样定义" class="headerlink" title="标准浏览器中固定高度值的容器是不会象IE6里那样被撑开的,那我又想固定高度,又想能被撑开需要怎样设置呢？办法就是去掉height设置min-height:200px; 这里为了照顾不认识min-height的IE6 可以这样定义:"></a>标准浏览器中固定高度值的容器是不会象IE6里那样被撑开的,那我又想固定高度,又想能被撑开需要怎样设置呢？办法就是去掉height设置min-height:200px; 这里为了照顾不认识min-height的IE6 可以这样定义:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    height:auto!important;</span><br><span class="line">    height:200px;</span><br><span class="line">    min-height:200px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="27-怎么样才能让层显示在FLASH之上呢"><a href="#27-怎么样才能让层显示在FLASH之上呢" class="headerlink" title="27.怎么样才能让层显示在FLASH之上呢?"></a>27.怎么样才能让层显示在FLASH之上呢?</h3><h4 id="解决的办法是给FLASH设置透明"><a href="#解决的办法是给FLASH设置透明" class="headerlink" title="解决的办法是给FLASH设置透明"></a>解决的办法是给FLASH设置透明</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;paramname&#x3D;&quot;wmode&quot; value&#x3D;&quot;transparent&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>浏览器</category>
      </categories>
  </entry>
</search>
